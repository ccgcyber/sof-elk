# SOF-ELKÂ® Configuration File
# (C)2016 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for Sendmail MTA messages
# Note that this file is UNSUPPORTED.  By default, it is not enabled in SOF-ELK.

filter {
    if [type] == "syslog" {
        if [syslog_program] == "sendmail" {
            # t1CGWwfs001773: from=<usr1@domain1.tld>, size=9191, class=0, nrcpts=0, proto=ESMTP, daemon=MTA, relay=[87.116.65.57]
            # t1CGZZuH002993: to=<user@host.tld>, delay=00:00:01, xdelay=00:00:01, mailer=local, pri=96121, dsn=2.0.0, stat=Sent
            # t1CGZ1hJ002734: Milter: to=<user3@host3.tld>, reject=451 4.7.1 Greylisting in action, please come back later

            grok {
                patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
                match => [ "message", "^%{SENDMAIL_QID:qid}: (?:%{HOSTNAME:host} )?\[%{IP:source_ip}\] (?:\(may be forged\) )?%{GREEDYDATA:message_remainder}$" ]
                match => [ "message", "^%{SENDMAIL_QID:qid}: %{SENDMAIL_QID}: %{GREEDYDATA:message_remainder}$" ]
                match => [ "message", "^%{SENDMAIL_QID:qid}: (?:%{NOTEQUAL:subsystem}: )?%{GREEDYDATA:message_remainder}$" ]
                add_tag => [ "got_smtp_qid" ]
                tag_on_failure => [ "_defaultparse" ]
            }
            if "got_smtp_qid" in [tags] and [message_remainder] and [message_remainder] != "" {
                mutate {
                    replace => { "message" => "%{message_remainder}" }
                }
            }

            if "got_smtp_qid" in [tags] and [message_remainder] {
                mutate {
                    # XXX must not be combined with replacement which uses same field
                    remove_field => [ "message_remainder" ]
                }
            }

            kv {
                trim => "<>"
                field_split => ","
                trimkey => " "
                add_tag => [ "parse_done" ]
            }

            if [relay] =~ /(may be forged)/ or [relay] =~ /^\[.*\]$/ {
                grok {
                    match => [ "relay", "\[%{IP:relay_ip}\]$" ]
                }
            } else if [relay] =~ /^.* \[.*\]$/ {
                grok {
                    match => [ "relay", "%{HOSTNAME:relay_host} \[%{IP:relay_ip}\]"]
                }
            }

            if [ctladdr] {
                grok {
                    match => [ "ctladdr", "%{DATA:ctladdr2} \(%{POSINT:uid}\/%{POSINT:gid}\)" ]
                    add_tag => [ "got_smtpuidgid" ]
                    tag_on_failure => [ "_defaultparse" ]
                }
                if "got_smtp_uidgid" in [tags] {
                    mutate {
                        replace => { "ctladdr" => "%{ctladdr2}" }
                    }
                    mutate {
                        remove_field => [ "ctladdr2" ]
                    }
                }
            }
        }
    }
}
