# SOF-ELK® Configuration File
# (C)2018 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for Windows Event Log messages sent via the Snare utility

filter {
  # handle snare records
  if [type] == "syslog" and [message] =~ /^MSWinEventLog/ {
    grok {
      match => { "message" =>
        [
          # same format but sometimes with literal tabs, sometimes with ascii #011 instead
          "^MSWinEventLog\t(%{INT:event_criticality})?\t(%{DATA:event_logsource})?\t(%{INT:snare_counter})?\t(%{DATA})?\t(%{INT:event_id})?\t(%{DATA:event_source})?\t(%{DATA:username})?\t(%{DATA:event_sidtype})?\t(%{DATA:event_logtype})?\t(%{DATA:hostname})?\t(%{DATA:event_category})?\t(%{DATA:event_data})?\t(%{GREEDYDATA:event_fulldata})?",
          "^MSWinEventLog#011(%{INT:event_criticality})?#011(%{DATA:event_logsource})?#011(%{INT:snare_counter})?#011(%{DATA)?#011(%{INT:event_id})?#011(%{DATA:event_source})?#011(%{DATA:username})?#011(%{DATA:event_sidtype})?#011(%{DATA:event_logtype})?#011(%{DATA:hostname})?#011(%{DATA:event_category})?#011(%{DATA:event_data})?#011(%{GREEDYDATA:event_fulldata})?"
# this possibly for use with regular snare format?  disabled because I have not yet encountered this data format for testing
#          "^MSWinEventLog\t%{INT:criticality}\t%{DATA:event_logsource}\t%{INT:snare_counter}%{DATA}\t%{INT:event_id}\t%{DATA:event_source}\t%{DATA:username}\t%{DATA:event_sidtype}\t%{DATA:event_logtype}\t%{DATA:hostname}\t%{DATA:event_category}\t%{DATA:event_data}\t%{GREEDYDATA:event_fulldata}"
        ]
      }

      add_tag => [ "got_snare_msg" ]
      tag_on_failure => [ "_gpfail", "fail_sl06" ]
    }
  }

  # there is no useful syslog_program in a snare message (it contains the hostname), so replace it with the event_source value
  if [event_source] {
    mutate {
      replace => { "syslog_program" => "%{event_source}" }
    }
  }

  if [event_fulldata] {
    mutate {
      replace => { "message" => "%{event_fulldata}" }
      remove_field => [ "event_fulldata" ]
      add_tag => [ "parse_done" ]
    }
  }
}


# From: http://www.canopsis.org/windows-eventlog-snare-logstash
#       https://docs.tibco.com/pub/loglogic_universal_collector/2.6.0/doc/html/source/user-guide/concepts/c_event_output_format.html
#Snare event record format
#The format of the event record is as follows:

#| Number | Field | Description |
#|:———–|————:|:————:|
#| 1 | Hostname | The assigned hostname of the machine or the override value entered using the Snare front.
#| 2 | Event Log Type | Fixed value of ‘MSWinEventLog’.
#| 3 | Criticality | This is determined by the Alert level given to the objective by the user and is a number between 0 and 4, as detailed in the registry settings in Appendix B.
#| 4 | SourceName | This is the Windows Event Log from which the event record was derived. In the above example, the event record was derived from the ‘security’ event log.
#| 5 | Snare Event Counter | Based on the internal Snare event counter. Rotates at ‘MAXDWORD’.
#| 6 | DateTime | This is the date time stamp of the event record.
#| 7 | EventID | This is the Windows Event ID.
#| 8 | SourceName | This is the Windows Event Log from which the event record was derived. In the above example, the event record was derived from the ‘security’ event log.
#| 9 | UserName | This is the Window’s user name.
#| 10 | SIDType | This is the type of SID used. In the above example, it is a ‘user’ SID, but it may also be a ‘computer’ or other type of SID.
#| 11 | EventLogType | This can be anyone of ‘Success Audit’, ‘Failure Audit’, ‘Error’, ‘Information’, or ‘Warning’.
#| 12 | ComputerName | This is the Windows computer name.
#| 13 | CategoryString | This is the category of audit event, as detailed by the Windows event logging system.
#| 14 | DataString | This contains the data strings.
#| 15 | ExpandedString | This contains the expanded data strings.
#| 16 | MD5 Checksum | (optional). An md5 checksum of the event can optionally be included with each event sent over the network by the Snare for Windows agent. Note that the application that evaluates each record will need to strip the final delimiter, plus the checksum, prior to evaluating the event.