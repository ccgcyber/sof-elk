# SOF-ELKÂ® Configuration File
# (C)2016 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for SSH server messages

# Messages to handle:
## subsystem request for sftp
## reverse mapping checking getaddrinfo for ansible [192.168.75.43] failed - POSSIBLE BREAK-IN ATTEMPT!
## Address 155.94.216.106 maps to 155.94.216.106.static.quadranet.com, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!
## input_userauth_request: invalid user postgres
## Invalid user supervisor from 115.248.101.202 port 63030
## Unable to negotiate with 37.10.82.196 port 37351: no matching key exchange method found. Their offer: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1 [preauth]
## Connection from 115.238.101.202 port 51928 on 172.31.55.66 port 22
## Disconnected from 125.65.101.202 port 59105 [preauth]
## Received disconnect from 125.65.42.182 port 59105:11:  [preauth]
## Received disconnect from 159.100.83.150 port 61771:11: disconnected by user

filter {
  # SSH login messages
  if (([type] == "syslog") and [syslog_program] == "sshd") {
    grok {
      patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
      match => [ "message", "^%{WORD:login_result} %{WORD:login_method} for (?:%{DATA:user_validity} )?%{USERNAME:user} from %{IPORHOST:source_ip} port %{POSINT:source_port} %{WORD:ssh_protocol}(?:: %{WORD:key_type} %{SSH_KEYID:key_id})?$" ]
      match => [ "message", "^Received disconnect from %{IPORHOST:source_ip}: %{NONNEGINT:ssh_disconnect_code}: %{GREEDYDATA:ssh_disconnect_statement}$"]
      match => [ "message", "^Connection closed by %{IPORHOST:source_ip}$"]
      match => [ "message", "^Invalid user %{USER:user} from %{IPORHOST:source_ip}$" ]
      match => [ "message", "^Invalid user %{USER:user} from %{IPORHOST:source_ip} port %{POSINT:source_port}$" ]
      match => [ "message", "^Unable to negotiate with %{IPV4:source_ip} port %{POSINT:source_port}: %{DATA:auth_reason}. Their offer: %{DATA:source_kex_methods} \[preauth\]$" ]
      match => [ "message", "^Connection from %{IPORHOST:source_ip} port %{POSINT:source_port} on %{IPORHOST:destination_ip} port %{POSINT:destination_port}$" ]
      match => [ "message", "^Disconnected from %{IPORHOST:source_ip} port %{POSINT:source_port} \[preauth\]$" ]
      match => [ "message", "^Received disconnect from %{IPORHOST:source_ip} port %{POSINT:source_Port}:%{POSINT:unknown_field}:  \[preauth\]$" ]

      add_tag => [ "got_ssh", "parse_done" ]
      tag_on_failure => [ "_gpfail_sshlogin" ]
    }
  }

  if [source_kex_methods] {
    split {
      field => "source_kex_methods"
      terminator => ","
    }
  }

  if "_gpfail_sshlogin" in [tags] {
    mutate {
      remove_tag => [ "_gpfail_sshlogin"]
    }
  }
}
